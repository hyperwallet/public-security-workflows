name: Code Scanning

on:
  workflow_call:
    inputs:
      build-scheme:
        description: 'Optional xcodebuild scheme arg'
        required: false
        type: string
      build-workspace:
        description: 'Optional xcodebuild workspace arg'
        required: false
        type: string
      build-command:
        description: 'Optional application build command, overrides build-workspace'
        required: false
        type: string
      timeout-minutes:
        description: 'Optional override for larger builds'
        required: false
        default: 30
        type: number

permissions:
  security-events: write
  # required to fetch internal or private CodeQL packs
  packages: read
  actions: read
  contents: read

defaults:
  run:
    shell: bash

jobs:
  code-scanning:
    name: Code Scanning
    runs-on: macos-15
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      fail-fast: false

    steps:
      - name: Capture start time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
        shell: bash
             
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
     
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd
        with:
          xcode-version: 16.2

      - name: Carthage [Setup cache]
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
          restore-keys: |
            ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
      
      - name: Carthage [Install dependencies]
        run: carthage bootstrap
          --platform ios
          --cache-builds
          --use-xcframeworks
          --no-use-binaries
   
      # https://github.com/github/codeql/issues/17819#issuecomment-2594177475
      - name: Fix CodeQL Issue (Xcode 16)
        run: |
          xcode_path=$(xcode-select -p)
          sudo mkdir -p /usr/local/lib
          sudo cp ${xcode_path}/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/*.dylib /usr/local/lib/

          echo "DYLD_LIBRARY_PATH=/usr/local/lib:${DYLD_LIBRARY_PATH}" >> $GITHUB_ENV
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@45775bd8235c68ba998cffa5171334d58593da47
        with:
          languages: swift
          build-mode: manual

      - name: Build (default)
        if: ${{ inputs.build-command == '' }}
        run: |
          args=(
            "-configuration Debug"
            "-scheme ${{ inputs.build-scheme }}"
            "-destination 'generic/platform=iOS Simulator'"
            "-derivedDataPath '${GITHUB_WORKSPACE}/DerivedData'"
            "-clonedSourcePackagesDirPath SourcePackages"
            "-disableAutomaticPackageResolution"
            "-scmProvider system"
          )
          
          if [[ -n "${{ inputs.build-workspace }}" ]]; then
            args+=("-workspace ${{ inputs.build-workspace }}")
          fi
         
          args+=("clean")
          args+=("build")
          
          build_cmd="xcodebuild ${args[*]}"
          echo "${build_cmd}"
          eval "${build_cmd}"
               
      - name: Build (custom)
        if: ${{ inputs.build-command != '' }}
        run: |
          ${{ inputs.build-command }}

      - name: Perform CodeQL Analysis
        id: codeql
        uses: github/codeql-action/analyze@45775bd8235c68ba998cffa5171334d58593da47
        with:
          category: "/language:swift"

      - name: DataDog
        if: always() && github.event_name != 'merge_group'
        uses: hyperwallet/public-security-workflows/datadog@main
        with:
          SOURCE: "CodeQL"
          DATADOG_API_KEY: ${{ secrets.BUILD_SECURITY_PAYPAL_DATADOG_QA_TOKEN_PAYPAL_DATADOG_QA_TOKEN }}
          BU_NAME: "Venmo"
          start_time: ${{ env.start_time }}
          OUTCOME: "${{ steps.codeql.outcome }}"